# Generated by Django 3.2.16 on 2022-10-13 13:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CatalogueEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Locked'), (3, 'Cancelled')], default=1)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Catalogue Entry',
                'verbose_name_plural': 'Catalogue Entries',
            },
        ),
        migrations.CreateModel(
            name='LayerSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('file', models.URLField()),
                ('status', models.IntegerField(choices=[(1, 'Submitted'), (2, 'Accepted'), (3, 'Declined')], default=1)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('catalogue_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='layers', to='catalogue.catalogueentry')),
            ],
            options={
                'verbose_name': 'Layer Submission',
                'verbose_name_plural': 'Layer Submissions',
            },
        ),
        migrations.CreateModel(
            name='WebhookNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('type', models.IntegerField(choices=[(1, 'On Approve'), (2, 'On Lock'), (3, 'Both')])),
                ('url', models.URLField()),
                ('catalogue_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhook_notifications', to='catalogue.catalogueentry')),
            ],
            options={
                'verbose_name': 'Webhook Notification',
                'verbose_name_plural': 'Webhook Notifications',
            },
        ),
        migrations.CreateModel(
            name='LayerSymbology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('file', models.URLField()),
                ('layer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='symbology', to='catalogue.layersubmission')),
            ],
            options={
                'verbose_name': 'Layer Symbology',
                'verbose_name_plural': 'Layer Symbologies',
            },
        ),
        migrations.CreateModel(
            name='LayerSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('url', models.URLField()),
                ('frequency', models.DurationField()),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Disabled')], default=1)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('catalogue_entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='catalogue.catalogueentry')),
            ],
            options={
                'verbose_name': 'Layer Subscription',
                'verbose_name_plural': 'Layer Subscriptions',
            },
        ),
        migrations.CreateModel(
            name='LayerMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('layer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='catalogue.layersubmission')),
            ],
            options={
                'verbose_name': 'Layer Metadata',
                'verbose_name_plural': 'Layer Metadata',
            },
        ),
        migrations.CreateModel(
            name='LayerAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('type', models.IntegerField(choices=[(1, 'Short'), (2, 'Long'), (3, 'Float'), (4, 'Double'), (5, 'Text'), (6, 'Date'), (7, 'Blob'), (8, 'Object Id'), (9, 'Global Id'), (10, 'Geometry')])),
                ('order', models.PositiveIntegerField()),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='catalogue.layersubmission')),
            ],
            options={
                'verbose_name': 'Layer Attribute',
                'verbose_name_plural': 'Layer Attributes',
            },
        ),
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('type', models.IntegerField(choices=[(1, 'On Approve'), (2, 'On Lock'), (3, 'Both')])),
                ('email', models.TextField()),
                ('catalogue_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_notifications', to='catalogue.catalogueentry')),
            ],
            options={
                'verbose_name': 'Email Notification',
                'verbose_name_plural': 'Email Notifications',
            },
        ),
        migrations.AddField(
            model_name='catalogueentry',
            name='active_layer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='catalogue.layersubmission'),
        ),
        migrations.AddField(
            model_name='catalogueentry',
            name='assigned_to',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='catalogueentry',
            name='custodian',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='custody', to=settings.AUTH_USER_MODEL),
        ),
    ]
